#!/bin/bash
# chkconfig: 2345 90 90
# description: Go Agent<%= @go_agent_instance %>
### BEGIN INIT INFO
# Provides: go-agent<%= @go_agent_instance %>
# Required-Start: $network $remote_fs
# Required-Stop: $network $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: Start the Go Agent<%= @go_agent_instance %>
### END INIT INFO

PID_FILE="/var/run/go-agent<%= @go_agent_instance -%>/go-agent.pid"
CUR_USER=`whoami`

# LSB implimentation is not standard across distros, so we have to roll our own...
killproc() {
	pkill -u go -f go-agent<%= @go_agent_instance %>-running
}

start_daemon() {
    eval "$*"
}

log_success_msg() {
    echo "$*"
}

log_failure_msg() {
    echo "$*"
}

. /etc/default/go-agent<%= @go_agent_instance -%>

check_proc() {
		pgrep -u go -f go-agent<%= @go_agent_instance %>-running
}

start_go_agent() {
    if [ "${CUR_USER}" != "root" ] && [ "${CUR_USER}" != "go" ]; then
        log_failure_msg "Go Agent<%= @go_agent_instance -%> can only be started as 'root' or 'go' user."
        exit 4
    fi

    check_proc
    if [ $? -eq 0 ]; then
	    log_success_msg "Go Agent<%= @go_agent_instance -%> already running."
	    exit 0
    fi

    [ -d /var/run/go-agent<%= @go_agent_instance -%> ] || (mkdir /var/run/go-agent<%= @go_agent_instance -%> && chown -R go:go /var/run/go-agent<%= @go_agent_instance -%>)

    if [ "$JAVA_HOME" != "" ]; then
        if [ "${CUR_USER}" == "root" ]; then
            start_daemon /bin/su - go -c /usr/share/go-agent/agent<%= @go_agent_instance %>.sh
        else
            start_daemon /usr/share/go-agent/agent<%= @go_agent_instance %>.sh
        fi
    else
        log_failure_msg "Starting up of Go Agent<%= @go_agent_instance -%> requires JAVA_HOME to be set in /etc/default/go-agent<%= @go_agent_instance -%>. Please set JAVA_HOME to proceed."
    fi

    # Sleep for a while to see if Cruise bleats about anything
    sleep 15
    check_proc

    if [ $? -eq 0 ]; then
        log_success_msg "Started Go Agent<%= @go_agent_instance -%>."
    else
        log_failure_msg "Error starting Go Agent<%= @go_agent_instance -%>."
        exit -1
    fi
}

stop_go_agent() {
    if [ "${CUR_USER}" != "root" ] && [ "${CUR_USER}" != "go" ]; then
        log_failure_msg "You do not have permission to stop the Go Agent<%= @go_agent_instance -%>"
        exit 4
    fi

    check_proc

    if [ $? -eq 0 ]; then
        killproc -p $PID_FILE /usr/share/go-agent/agent<%= @go_agent_instance %>.sh >/dev/null

        # Make sure it's dead before we return
        until [ $? -ne 0 ]; do
            sleep 1
            check_proc
        done

        check_proc
        if [ $? -eq 0 ]; then
            log_failure_msg "Error stopping Go Agent<%= @go_agent_instance -%>."
            exit -1
        else
            log_success_msg "Stopped Go Agent<%= @go_agent_instance -%>."
        fi
    else
        log_failure_msg "Go is not running or you don't have permission to stop it"
    fi
}

go_status() {
    check_proc
    if [ $? -eq 0 ]; then
	    log_success_msg "Go Agent<%= @go_agent_instance -%> is running."
    else
	    log_failure_msg "Go Agent<%= @go_agent_instance -%> is stopped."
	    exit 3
    fi
}

case "$1" in
    start)
        start_go_agent
        ;;
    stop)
        stop_go_agent
        ;;
    restart)
        stop_go_agent
        start_go_agent
        ;;
    status)
        go_status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0